// Your code here
function fetchAndDisplayCharacters() {
    fetch('http://localhost:3000/characters')
      .then(response => response.json())
      .then(characters => {
        characters.forEach(character => {
          const characterElement = createCharacterElement(character);
          character-bar.appendChild(characterElement);
        });
      });
  }
  
  // Function to handle form submission for adding a new character
  function handleCharacterFormSubmit(event) {
    event.preventDefault();
    const nameInput = document.getElementById('name');
    const imageInput = document.getElementById('image-url');
    const character = {
      name: nameInput.value,
      image: imageInput.value,
      votes: 0
    };
  
    // Add the new character to the character bar
    const characterElement = createCharacterElement(character);
    character-bar.appendChild(characterElement);
  
    // Display the new character's details
    displayCharacterDetails(character);
  
    // Reset the form fields
    nameInput.value = '';
    imageInput.value = '';
  
    // Make a POST request to save the new character on the server
    fetch('http://localhost:3000/characters', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(character)
    })
      .then(response => response.json())
      .then(newCharacter => {
        // Update the character's ID with the ID generated by the server
        characterElement.dataset.id = newCharacter.id;
      });
  }
  
  // Function to handle form submission for adding votes
  function handleVotesFormSubmit(event) {
    event.preventDefault();
    const votesInput = document.getElementById('votes');
    const votes = parseInt(votesInput.value, 10);
    const voteCount = document.getElementById('vote-count');
    const characterId = document.getElementById('detailed-info').dataset.id;
  
    // Make a PATCH request to update the character's votes on the server
    fetch(`http://localhost:3000/characters/${characterId}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ votes: votes })
    })
      .then(response => response.json())
      .then(updatedCharacter => {
        voteCount.textContent = updatedCharacter.votes;
        votesInput.value = '';
      });
  }
  
  // Function to create a character element
  function createCharacterElement(character) {
    const characterElement = document.createElement('span');
    characterElement.textContent = character.name;
    characterElement.addEventListener('click', () => displayCharacterDetails(character));
    characterElement.dataset.id = character.id; // Store the character's ID as a data attribute
    return characterElement;
  }
  
  // Rest of the code...
  
  // Fetch and display characters on page load
  fetchAndDisplayCharacters();